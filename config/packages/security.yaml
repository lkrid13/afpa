security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        #users_in_memory: { memory:null }
        # commenter pour utilisation des users en base de données
        #users_in_memory:
        #    memory:
        #        users:
        #            demo:
        #                password: demo
        #                roles: ROLE_ADMIN
        from_database:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: lazy
            #provider: users_in_memory
            logout:
                path: /logout
                target: /
            # activate different ways to authenticate
            #http_basic:
            #    realm: Secured Area
            # https://symfony.com/doc/current/security.html#firewalls-authentication
            
            # ajout pour user en base de données
            form_login:
                check_path: login
            
            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
    
    encoders:
    #    Symfony\Component\Security\Core\User\User: plaintext
        App\Entity\User:
            algorithm: bcrypt
            cost: 12
        